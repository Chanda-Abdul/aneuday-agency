@use 'sass:math';

@function strip-unit($value) {
  @return math.div($value, ($value * 0 + 1));
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

@font-face {
  font-family: 'PP Neue Regular';
  src: url('/src/media/fonts/ppneue.woff2') format('woff2');
  font-weight: 400;
  font-style: normal;
}

html {
//   font-size: calc(100vw / var(--desktop-width) * 10);
}

body {
  font-family: 'PP Neue Regular', sans-serif;
//   font-size: clamp(16px, 1.6rem, 1.6rem);
  font-weight: 400;
  font-style: normal;
  text-size-adjust: 100%;
  line-height: 1.5;
  text-rendering: optimizeSpeed;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

p {
  margin-bottom: var(--margin-default);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 500;
}

h1 {
//   @include fluid-type(430px, 1440px, 32px, 48px);
//   margin-bottom: 6.4rem;
//   line-height: 1.3;
}

h2 {

}